function f=flatHazard(varargin)
% the subclass flatHazard class
% OBJ=flatHazard(percentile, value, fixedDelayMs)
% percentile - this percentage of all delays are less than value (ie "99% of all trials are shorter than 10 sec")
% value - in ms
% fixedDelayMs - a fixed delay that is added to the random delay generated by the flatHazard function


f.percentile=[];
f.value=[];
f.fixedDelayMs=[];

switch nargin
    case 0
        % if no input arguments, create a default object
        a=delayManager('flatHazard function');
        f = class(f,'flatHazard',a);
    case 1
        % if single argument of this class type, return it
        if (isa(varargin{1},'flatHazard'))
            f = varargin{1};
        else
            error('Input argument is not a flatHazard object')
        end
    case 3
        % percentile
        if isnumeric(varargin{1}) && length(varargin{1})==1 && varargin{1}>0 && varargin{1}<=1
            f.percentile=varargin{1};
        else
            error('percentile must be >0 and <=1');
        end
        % value
        if isnumeric(varargin{2}) && length(varargin{2})==1
            f.value=varargin{2};
        else
            error('value must be numeric');
        end
        % fixedDelayMs
        if isnumeric(varargin{3}) && length(varargin{3})==1
            f.fixedDelayMs=varargin{3};
        else
            error('fixedDelayMs must be numeric');
        end
        a=delayManager('flatHazard function');
        f = class(f,'flatHazard',a);
    otherwise
        nargin
        error('wrong number of input arguments');
end

end % end function